#!/usr/bin/env python3

from analyzer import get_report_paths
import pandas as pd

def get_registry_keys(data):
        
    regkeys = []
    
    generic_event = data['behavior']['generic']

    for event in generic_event:
        if 'summary' in event and 'regkey_opened' in event['summary']:
            regkey_opened = event['summary']['regkey_opened']
            for regkey_o in regkey_opened:
                if regkey_o not in regkeys:
                    regkeys.append(regkey_o)
        
        if 'summary' in event and 'regkey_read' in event['summary']:
            regkey_read = event['summary']['regkey_read']
            for regkey_r in regkey_read:
                if regkey_r not in regkeys:
                    regkeys.append(regkey_r)

    return regkeys

def count_registry_calls(data, regkeys, save_path):
    
    api_data = []
    
    calls = data['behavior']['processes'][1]['calls']

    for call in calls:
        api_data.append({"api": call['api'], "arguments": call['arguments']})
    
    registry_count = {}

    save_path = save_path + data['target']['file']['sha256'] + ".txt"
    with open(save_path, 'w') as file:
        for api in api_data:
            if 'regkey' in api['arguments']:
                if api['arguments']['regkey'] in regkeys:
                    if api['arguments']['regkey'] in registry_count:
                        registry_count[api['arguments']['regkey']] += 1
                    else:
                        registry_count[api['arguments']['regkey']] = 1
        file.write(f"{registry_count}")
    

def main():
    ROOT = "/media/nico/6790BDD20E524E22/ramsonware_dataset/reports"
    paths = get_report_paths(ROOT)

    for path in paths:
        try:
            SAVE_PATH = "/home/nico/Desktop/Thesis/Regkeys/"
            data = pd.read_json(path, typ='dictionary')
            count_registry_calls(data, get_registry_keys(data), SAVE_PATH)
        except Exception as ex:
            print(f"Error: {str(ex)}")
            continue

if __name__ == "__main__":
    main()