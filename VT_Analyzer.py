#!/usr/bin/env python3

import requests

SAMPLE = "/media/cape/NewSamples/Thesis/Safe_/2XClient_12.0_build_2193.paf.exe"

# Performs the upload of .exe examples
def analyze(API_KEY):

    if get_file_size_mb(SAMPLE) < 32:
        url = "https://www.virustotal.com/api/v3/files"
        files = { "file": (SAMPLE, open(SAMPLE, "rb"), "application/x-ms-dos-executable") }
    
        headers = {
            "accept": "application/json",
            "X-Apikey": API_KEY
        }

        response = requests.post(url, files=files, headers=headers)

        print(response.text)
    else:
        url = get_large_url(API_KEY)
        files = { "file": (SAMPLE, open(SAMPLE, "rb"), "application/x-ms-dos-executable") }
    
        headers = {
            "accept": "application/json",
            "x-apikey": API_KEY
        }

        response = requests.post(url, files=files, headers=headers)

        print(response.text)

import json

# Returns a custom URL since some executables are larger than 32 Mb
def get_large_url(API_KEY):

    url = "https://www.virustotal.com/api/v3/files/upload_url"

    headers = {
        "accept": "application/json",
        "x-apikey": API_KEY
    }

    response = requests.get(url, headers=headers)

    return json.loads(response.text)['data']


import os

# Returns the size of the file in megabytes.
def get_file_size_mb(file_path):

    file_size_bytes = os.path.getsize(file_path)

    file_size_mb = file_size_bytes / (1024 * 1024)

    return file_size_mb

import sys 
import time

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python VT_Analyzer.py <API_KEY>")
        sys.exit(1)
    
    counter = 1
    if counter % 4 == 0:
        print("Waiting 1:30 minutes...")
        time.sleep(60+30)
    
    counter += 1
    analyze(sys.argv[1])
    